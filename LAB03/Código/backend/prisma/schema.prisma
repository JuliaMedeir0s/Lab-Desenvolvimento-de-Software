generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Usuario {
  id          Int         @id @default(autoincrement())
  nome        String
  email       String      @unique
  senha       String
  tipoUsuario TipoUsuario
  aluno       Aluno?      @relation("UsuarioAluno")
  parceiro    Parceiro?   @relation("UsuarioParceiro")
  professor   Professor?  @relation("UsuarioProfessor")
}

model Aluno {
  id            Int         @id
  cpf           String
  rg            String
  saldo         Int         @default(0)
  instituicaoId Int
  enderecoId    Int
  endereco      Endereco    @relation(fields: [enderecoId], references: [id])
  usuario       Usuario     @relation("UsuarioAluno", fields: [id], references: [id], onDelete: Cascade)
  instituicao   Instituicao @relation(fields: [instituicaoId], references: [id])
  transacoes    Transacao[] @relation("AlunoTransacoes")
}

model Professor {
  id            Int         @id
  cpf           String
  departamento  String
  saldo         Int         @default(10000)
  instituicaoId Int
  usuario       Usuario     @relation("UsuarioProfessor", fields: [id], references: [id], onDelete: Cascade)
  instituicao   Instituicao @relation(fields: [instituicaoId], references: [id])
  transacoes    Transacao[] @relation("ProfessorTransacoes")
}

model Parceiro {
  id        Int        @id
  cnpj      String
  usuario   Usuario    @relation("UsuarioParceiro", fields: [id], references: [id], onDelete: Cascade)
  vantagens Vantagem[]
}

model Instituicao {
  id          Int         @id @default(autoincrement())
  nome        String
  alunos      Aluno[]
  professores Professor[]
}

model Endereco {
  id          Int     @id @default(autoincrement())
  rua         String
  numero      String
  complemento String?
  bairro      String
  cidade      String
  uf          String
  cep         String
  alunos      Aluno[]
}

model Vantagem {
  id         Int         @id @default(autoincrement())
  nome       String
  descricao  String
  imagem     String
  custo      Int
  parceiroId Int
  transacoes Transacao[] @relation("VantagemTransacoes")
  parceiro   Parceiro    @relation(fields: [parceiroId], references: [id])
}

model Transacao {
  id          Int           @id @default(autoincrement())
  tipo        TipoTransacao
  valor       Int
  mensagem    String
  codigo      String        @unique
  data        DateTime      @default(now())
  alunoId     Int
  professorId Int?
  vantagemId  Int?
  aluno       Aluno         @relation("AlunoTransacoes", fields: [alunoId], references: [id])
  professor   Professor?    @relation("ProfessorTransacoes", fields: [professorId], references: [id])
  vantagem    Vantagem?     @relation("VantagemTransacoes", fields: [vantagemId], references: [id])
}

enum TipoUsuario {
  ALUNO
  PROFESSOR
  PARCEIRO
}

enum TipoTransacao {
  ENVIO
  RESGATE
}
